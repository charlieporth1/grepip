#!/bin/bash
# By Av'tW
# Date: 2015-04-23
# No License
# No Warranty
#
# NOTE: change the name of the grep command below if GNU grep has a different name
# (it won't probably work without modification using non-GNU grep commands)
grepBinary=grep

progName="$( basename "$0" )"
version=0.1
define(){ IFS='\n' read -r -d '' ${1} || true; }

define helpString <<EOF
$progName v$version - filter in IPv4 addresses using GNU grep, one per line
Syntax: $progName [OPTIONS]

OPTIONS:
 -x --no-local      Exclude local ips (127.0.*, 10.*, 172.16.*-172.31.*)
 --help -h          Show help
 --version -v       Show version and exit
EOF

for i in "$@"; do
    case $i in
        --help | -h ) shift; echo "$helpString" ;;
        --version | -v ) shift; echo "$version"; exit 0 ;;
        -x | --no-local ) shift ; optNoLocal=1;;
        -* ) echo "Unknown option: $1"; exit 1 ;;
        *) ;;
    esac
done

# -x will filter out local IPv4 networks (RFC1918)
# --------------------------------------------------------------------------- 
# 10.0.0.0 - 10.255.255.255       10.0.0.0/8)    single class A network
# 172.16.0.0 - 172.31.255.255     172.16.0.0/12  16 contiguous class B networks
# 192.168.0.0 - 192.168.255.255   192.168.0.0/16 256 contiguous class C networks
# --------------------------------------------------------------------------- 
if [[ -n $optNoLocal ]]; then
    additionalFilters="| grep -vE -e '192.168(\.[0-9]{1,3}){2}' \
                                  -e '10(\.[0-9]{1,3}){3}' \
                                  -e '172.(16|17|18|19|2[0-9]|30|31)(\.[0-9]{1,3}){2}' "
fi

grep -oE '((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])' $additionalFilters
